{
  "tableName": "fullClick",
  "tableType": "REALTIME",
  "segmentsConfig": {
    "timeType": "MILLISECONDS",
    "schemaName": "fullClick2",
    "replicasPerPartition": "1",
    "minimizeDataMovement": false,
    "timeColumnName": "click_timestamp"
  },
  "tenants": {
    "broker": "DefaultTenant",
    "server": "DefaultTenant",
    "tagOverrideConfig": {}
  },
  "tableIndexConfig": {
    "streamConfigs": {
      "streamType": "pulsar",
      "stream.pulsar.bootstrap.servers": "pulsar+ssl://pulsar-gcp-uscentral1.streaming.datastax.com:6651",
      "stream.pulsar.consumer.prop.auto.offset.reset": "smallest",
      "stream.pulsar.authenticationToken": "PULSAR_TOKEN",
      "stream.pulsar.consumer.type": "lowlevel",
      "stream.pulsar.enableKeyValueStitch": "true",
      "stream.pulsar.topic.name": "PULSAR_TOPIC",
      "stream.pulsar.fetch.timeout.millis": "10000",
      "stream.pulsar.decoder.class.name": "ai.startree.pinot.plugin.inputformat.pulsar.PulsarKeyValueAvroMessageDecoder",
      "stream.pulsar.decoder.prop.pulsar.admin.url": "https://pulsar-gcp-uscentral1.api.streaming.datastax.com",
      "stream.pulsar.decoder.prop.authenticationToken": "PULSAR_TOKEN",
      "stream.pulsar.consumer.factory.class.name": "org.apache.pinot.plugin.stream.pulsar.PulsarConsumerFactory",
      "realtime.segment.flush.threshold.size": "10000",
      "realtime.segment.flush.threshold.time": "1h"
    },
    "rangeIndexVersion": 2,
    "autoGeneratedInvertedIndex": false,
    "createInvertedIndexDuringSegmentGeneration": false,
    "loadMode": "MMAP",
    "enableDefaultStarTree": false,
    "enableDynamicStarTreeCreation": false,
    "aggregateMetrics": false,
    "nullHandlingEnabled": false,
    "continueOnError": false,
    "validateTimeValue": false,
    "optimizeDictionaryForMetrics": false,
    "noDictionarySizeRatioThreshold": 0
  },
  "metadata": {},
  "routing": {
    "instanceSelectorType": "strictReplicaGroup"
  },
  "query": {
    "disableGroovy": false
  },
  "upsertConfig": {
    "mode": "FULL",
    "hashFunction": "NONE"
  },
  "ingestionConfig": {
    "transformConfigs": [
      {
        "columnName": "url_host",
        "transformFunction": "Groovy({user_agent}, user_agent)"
      }
    ]
  },
  "isDimTable": false
}